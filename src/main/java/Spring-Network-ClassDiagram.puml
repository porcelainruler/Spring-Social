@startuml
'https://plantuml.com/class-diagram

abstract class User {
    int id;
    String type;
    String name;
    String email UNIQUE;
    String phone UNIQUE;
    String address;
    String username;
    String password;
    boolean enabled;
    Date updatedAt;
}

' Every Mail / Phone will be linked with a single Account | Unique for a platform
class Account {
    int id;
    String platform;
    String username;
    String email UNIQUE;
    Strong phone UNIQUE;
    AccountStatus status;

    public void resetStatus();
    public void setStatus();
}

User *-- Account

class Role {
    int id;
    String name;
    List <User> userList;
    List <Privilege> privilegeList;
}

class Privilege {
    int id;
    String name;
    List <Role> roleList
}

Role *-- Privilege
User *-- Role
'
class Member {
    String dateOfJoining;
    Profile profile;
    List <Post> posts;
'    List<Reaction> reactions;
}

class Profile {
    blob profilePic;
    blob profileBackground;
    List<Work> workHistory;
    List<Education> educationHistory;
}

class Work {
    int id;
    String companyName;
    String position;
    double yoe;
    String address;
    String state;
    String pinCode;
    String dateOfJoining;
    String dateOfEnd;
    String description;
}

class Education {
    int id;
    String name;
    String educationLevel;
    String degree;
    String dateOfJoining;
    String dateOfCompletion;
    String description;
}

Member "1" *-- "1" Profile : contains
Member *-- Reaction
Profile "1" *-- "many" Work
Profile "1" *-- "many" Education

class Post {
    int id;
    MediaType mediaItem;
    String description;
    String dateOfCreation;
    List<Reaction> rating;
    List<Comment> comments;
}

enum Rating {
    LIKE (1);
    LAUGH (2);
    HEART (3);
    ANGRY (4);
    SUPPORT (5);
    CRY (6);
}

class Reaction {
    int postId;
    int userId;
    Rating rating;
}

Reaction *-- Rating

class Comment {
    int id;
    int userId
    String dateOfCreation;
    String message;
    List<Reaction> reaction;
    List<Reply> replies;
}

Member "1" *-- "many" Post : create / edit / delete
Post "1" *-- "1" Reaction : has
Post "1" *-- "many" Comment : has

class Reply {
    int id;
    int userId;
    String dateOfCreation;
    String message;
    List<Reaction> reaction;
    List<Reply> replies;
}

Comment "1" *-- "many" Reply : has
Comment *-- Reaction
Reply "1" *-- "many" Reply : has
Reply "1" *-- "1" Reaction : has


class Admin {
    public void blockUser(int userId);
    public void unblockUser(int userId);
    public void blockPost();
    public void unblockPost();
}

class Moderator {
    public void deletePost(int postId);
}

User <|-- Member : extends
User <|-- Admin : extends
User <|-- Moderator : extends

' Creation feature to be included in paid sub version
class Page {
    int id;
    String title;
    List<Post> posts;
    List<MediaType> mediaItems;
}

Member "many" -- "many" Page : follows
Page "1" *-- "many" Post

class Group {
    int id;
    String name;
    List<Post> posts;
    List<MediaType> mediaItems;
}

Group "many" <-- "many" Member : create / join and post / share media items

class ConnectionRequests {
    Member memberInvited;
    String message;
    ConnectionStatus status;
    String dateOfCreation;

    public boolean acceptInvite();
    public boolean rejectInvite();
}

Member "1" *-- "many" ConnectionRequests : sends

class Message {
    int id;
    Member sendTo;
    String message;
    MediaType mediaItem;
    String dateOdCreation;
}

Member "1" --> "many" Message : sends

class Notification {
    Member sendTo;
    int notificationId;
    String dateOfCreation;
    String message;
}

Message "1" --> "1" Notification : creates >
ConnectionRequest "1" --> "1" Notification : creates >
Post "1" --> "1" Notification : create >

@enduml